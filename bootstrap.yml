---
- hosts: all
  gather_facts: yes
  become: true
  
  # Vagrant provison runs this file, so you don't actually need an inventory
  # it does that for you.
  # Basically we setup a bunch of environment stuff so we can ssh into the host
  # Using all the data from all.yml

  tasks:
    - name: Add a special package, only on Centos or RHEL https://github.com/bayandin/webpagetest-private/issues/1
      package:
        name: libselinux-python
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Create User
      user:
        name: "{{ssh_user}}"
        password: Password@1
        shell: /bin/bash
        append: yes
        generate_ssh_key: yes
        ssh_key_bits: 1024
        ssh_key_file: .ssh/id_rsa

    - name: Add a special package, only on Centos or RHEL https://github.com/bayandin/webpagetest-private/issues/1
      package:
        name: libselinux-python
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Add user to sudoers
      lineinfile: dest=/etc/sudoers
                  regexp="{{ssh_user}}"
                  line='"{{ssh_user}}"  ALL=(ALL) NOPASSWD:ALL'
                  state=present

    - name: Disallow password authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present
      notify: restart_ssh

    - name: Disallow root SSH access
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PermitRootLogin"
                  line="PermitRootLogin no"
                  state=present
      notify: restart_ssh

    - name: Turn off selinux, only on Centos or RHEL
      selinux:
        policy: targeted
        state: permissive
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Copy over the ssh config file
      copy:
        src: ~/.ssh/config
        dest: /home/user/.ssh/config
        owner: "{{ssh_user}}"
        mode: 0600
   
    # Dependencies: 
    # Make some dummy keys on one of the VM's 
    # and place them in the root of this play

    - name: Copy over the ssh public key
      copy:
        src: "{{ssh_pub}}"
        dest: "{{ssh_home}}.ssh/id_rsa.pub"
        owner: "{{ssh_user}}"
        mode: 0600

    - name: Copy over the ssh private key
      copy:
        src: "{{ssh_priv}}"
        dest: "{{ssh_home}}.ssh/id_rsa"
        owner: "{{ssh_user}}"
        mode: 0600

    - name: Set authorized key from file
      authorized_key:
        user: "{{ssh_user}}"
        state: present
        key: "{{ lookup('file', '{{ssh_pub}}') }}"

  handlers:
    - name: restart_ssh
      systemd:
        name: sshd
        state: restarted